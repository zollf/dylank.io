name: Production

on:
  push:
    branches: [main]

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region            : "ap-southeast-2"
      - name: Terraform Check & Init
        run : |
          terraform -chdir=terraform fmt -check 
          terraform -chdir=terraform init
      - name: Terraform Apply
        run : terraform -chdir=terraform apply -auto-approve
  
  react:
    name: React Test
    runs-on: ubuntu-latest
    needs: [terraform]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Yarn Install
        run: yarn
      - name: Yarn Build
        run: yarn build
      - name: Yarn Test
        run: yarn test
      - name: Yarn Lint
        run: yarn lint
        
  go:
    name: Go Test
    runs-on: ubuntu-latest
    needs: [terraform]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.2'
      - name: Go Modules Download
        run: cd app && go mod download
      - name: Go Build
        run: cd app && go build -o server server.go

  s3:
    name: Sync with S3
    runs-on: ubuntu-latest
    needs: [react]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Yarn Install
        run: yarn
      - name: Yarn Build
        run: yarn build
      - name: Sync
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET         : "dylank.io"
          AWS_ACCESS_KEY_ID     : ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION            : "ap-southeast-2"
          SOURCE_DIR            : "public"

  ecr:
    name: Upload to ECR
    runs-on: ubuntu-latest
    needs: [go]
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Make Environment File
        uses: SpicyPizza/create-envfile@v1
        with:
          envkey_MONGO_URI: ${{ secrets.MONGO_URI }}
          file_name: .env 
      - name: CP .env
        run: cp .env app
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key : ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region            : "ap-southeast-2"
      - name: Upload
        run: sh deploy.sh dylank.io-go-image ${{ secrets.AWS_URL }} ap-southeast-2 docker/go.prod.Dockerfile
